<?phpif (!defined("_BASE_DIR_"))    exit();include_model('ModelFactory', 'Consiglio');include_form('Form');class ConsiglioCtrl{    private $cons;    private $tesserati = NULL;    private $idsoc;    private $poliz;     private $idpresidente; // id presidente si trova anche nella tabella tesserati    private $errore = false;    /**     * @var FormConsiglio     */    private $form = NULL;    /**     * @param int $idsoc     * @param boolean $mod [def:false] true se è per la modifica, false per la visualizzazione     * @param string $callback [opz]     */    function __construct($idsoc, $mod = false, $callback = NULL)    {        $this->cons = new Consiglio($idsoc);        $this->idsoc = $idsoc;         $this->idpresidente =  $this->getConsiglio()->getPresidente();        if (!$this->cons->esiste())            go_home();        if ($mod)        {            include_form(FORMELEM_LIST);            $tess = $this->getTesserati();            $this->form = new FormConsiglio('consiglio_mod');            $POST_polizza = empty($_POST['polizze_assicurative']) ? NULL : $_POST['polizze_assicurative'];            $this->poliz = new Polizza('polizze_stipulate');            foreach (Consiglio::getRuoli() as $ruolo)            {                $def = $this->cons->getIDMembro($ruolo);                //TODO altri ruoli obbligatori?                switch ($ruolo)                {                    case Consiglio::PRESIDENTE:                    case Consiglio::VICEPRESIDENTE:                    case Consiglio::SEGRETARIO:                    case Consiglio::DIRETTORETECNICO:                        $obblig = true;                        break;                    default:                        $obblig = false;                }                $el = new FormElem_List($ruolo, $this->form, NULL, $obblig, $def);                $el->setValori($tess, array($this, 'getNomeTesserato'));            }        }        if ($mod && $this->form->isInviato())        {            if ($this->form->isValido())            {                $ruoli = Consiglio::getRuoli();                foreach ($ruoli as $ruolo)                {                    $idm = $this->form->getElem($ruolo)->getValoreRaw();                    if ($idm === NULL)                        $this->cons->eliminaMembro($ruolo);                    $tes = new Tesserato($idm);                    if ($tes->esiste() && $tes->getIDSocieta() == $idsoc)                        $this->cons->setMembro($ruolo, $idm);                    else                        $this->errore = '';                }                $this->cons->salva();                $array_dati_polizza = array("id_polizza" => $POST_polizza, "idtesserato" => $this->idpresidente, "idsocieta" => $idsoc, "data_stipula" => date("d-m-Y"), "data_da" => NULL, "data_a" => NULL, "tipo_polizza" => "3");                $this->poliz->setDati($array_dati_polizza);                                $this->poliz->salva();                                $array_assicurazioni = $this->poliz->getAllPolizRichieste();                 $this->poliz->creaFileExcelPoliz($array_assicurazioni);                if (is_callable($callback))                    call_user_func($callback);            } else            {                foreach ($this->form->getErrori() as $err)                {                    if ($err == FORMERR_OBBLIG)                    {                        $this->errore = 'Riempire tutti i campi obbligatori';                        break;                    }                }                if ($this->form->getDoppi() !== NULL)                {                    $msg = '';                    $n = 1;                    $doppi = $this->form->getDoppi();                    foreach ($doppi as $r)                    {                        if ($n > 1)                        {                            if ($n < count($doppi))                                $msg .= ', ';                            else                                $msg .= ' e ';                        }                        $msg .= $this->getNomeRuolo($r);                        $n++;                    }                    $msg .= " non possono essere la stessa persona";                    if ($this->errore === NULL)                        $this->errore = '';                    else                        $this->errore .= '; ';                    $this->errore .= $msg;                }            }        }    }    public function getForm()    {        return $this->form;    }    function getTesserati()    {        if ($this->tesserati === NULL)        {            $this->tesserati = Tesserato::getInSocieta($this->idsoc);            uasort($this->tesserati, array("Tesserato", "compare"));        }        return $this->tesserati;    }    function getConsiglio()    {        return $this->cons;    }    function getNomeRuolo($ruolo)    {        switch ($ruolo)        {            case Consiglio::PRESIDENTE : return 'Presidente';            case Consiglio::VICEPRESIDENTE : return 'Vice Presidente';            case Consiglio::SEGRETARIO : return 'Segretario';            case Consiglio::DIRETTORETECNICO : return 'Direttore Tecnico'; //TODO gestire dt separatamente            default : return 'Consigliere';        }    }    /**     * @param Tesserato $tess     */    public function getNomeTesserato($tess)    {        return $tess->getCognome() . ' ' . $tess->getNome();    }    function haErrori($ruolo = NULL)    {        if ($ruolo === NULL)        {            return $this->errore;        } else        {            //se il form non è inviato non ci sono errori            if (!$this->form->isInviato())                return false;            $err = $this->form->getErrori();            return isset($err[$ruolo]);        }    }    function getErrori()    {        return $this->errore;    }}class FormConsiglio extends Form{    const DOPPIO = 'doppio';    private $doppi = NULL;    function checkValidita($valido)    {        $valido = true;        $ruoli = Consiglio::getRuoliCheck(); //TODO gestire dt separatamente        foreach ($ruoli as $ruolo)        {            $idm = $this->getElem($ruolo)->getValoreRaw();            if ($idm !== NULL)            {                foreach ($ruoli as $ruolo2)                {                    if ($ruolo < $ruolo2 &&                            $idm == $this->getElem($ruolo2)->getValoreRaw())                    {                        $valido = false;                        $ids = array($ruolo, $ruolo2);                        foreach ($ids as $idr)                        {                            $this->doppi[$idr] = $idr;                            $el = $this->getElem($idr);                            if (!$el->isErrato())                            {                                $el->setErrore(self::DOPPIO);                                $this->err[$idr] = self::DOPPIO;                            }                        }                    }                }            }        }        return $valido;    }    public function getDoppi()    {        return $this->doppi;    }}